# -*- coding: utf-8 -*-
"""Untitled19.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1O-20QvysOXd9jGDn0byS_ul6r4_Ma455
"""

import numpy as np
import pandas as pd

from sklearn.pipeline import Pipeline
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import r2_score
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import OneHotEncoder
from sklearn.compose import ColumnTransformer
import pickle

df = pd.read_csv('/content/car_data.csv')

df.head()

df.shape

df.info()

"""- Price : Ask for Price, ','
- Company : Extra categories
- Year : Extra categories
- kmd_driven : 'kms', ',', 'Petrol'
- Fuel Type : nan

# **Data Cleaning**
"""

df = df[df['year'].str.isnumeric()]

df['year'] = df['year'].astype('int')

df.info()

df['Price'] = df['Price'].apply(lambda x: x.replace(',', ''))
df = df[df['Price'].str.isnumeric()]
df.Price = df.Price.astype('int')

df.info()

df['kms_driven'] = df['kms_driven'].str.split(' ').str[0].str.replace(',' ,'')
df= df[df['kms_driven'].str.isnumeric()]
df['kms_driven'] = df['kms_driven'].astype('int')

df.info()

df.head()

df['name'] = df['name'].str.split(' ').str.slice(0,3).str.join(' ')

df.head()

df = df.reset_index(drop = True)

df.info()

df.describe()

df = df[~df['Price'] < 6.000003e+06]

df.info()

ohe = OneHotEncoder()
ohe.fit(X[['name' , 'company', 'fuel_type']])

ohe.categories_

cat_pipe = Pipeline([
    ('missing_values' , SimpleImputer(strategy = 'most_frequent')),
    ('encoding' ,  OneHotEncoder(categories = ohe.categories_))
])

preprocessing = ColumnTransformer([
    ('cat_pipe', cat_pipe ,[0,1,4])
], remainder = 'passthrough')

model = LinearRegression()

pipe = Pipeline([
    ('preprocessing', preprocessing),
    ('model', model)
])

X = df.drop('Price', axis = 1)
y = df['Price']

scores = []
for i in range(1000):
  x_train, x_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = i)
  model = LinearRegression()
  pipe = Pipeline([
    ('preprocessing', preprocessing),
    ('model', model)
  ])
  pipe.fit(x_train, y_train)
  y_pred = pipe.predict(x_test)
  y_sco = r2_score(y_test,y_pred)
  scores.append(y_sco)

x_train, x_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = np.argmax(scores))

x_train[:2]

pipe.fit(x_train, y_train)

pred =pipe.predict(x_test)

r2_score(y_test, pred)

pickle.dump(pipe, open('RegressionModel.pkl', 'wb'))

df.to_csv('clean_data.csv')

pipe.predict(pd.DataFrame([['Maruti Suzuki Swift','Maruti',2019, 100,'Petrol']], columns = ['name','company','year','kms_driven','fuel_type']))

